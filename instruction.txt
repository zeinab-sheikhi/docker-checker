Instructions
The objective of the exercise is to build a service in Python exposed by a REST API, which
allows to:

● Submit a dockerfile and return a job ID;
● Retrieve the status and a performance if it exists associated with the job;
The performance is a decimal.

Once the dockerfile is received, the service builds the docker image, scans its vulnerabilities
using a third-party tool, and then according to the scan result:
● Assigns a fail status to the job
● Executes the container and associates to the job the performance (the decimal) and a
success status.

It is assumed that:
The third-party scanning tool is available through an HTTP endpoint - for the purpose of this test, provide a mock endpoint for scanning a Docker image (it can for example return True or False based on an arbitrary condition), and call this endpoint in your main service .

During its execution, the container writes the performance to a file `/data/perf.json` We set up the /data directory of the container on a volume to be able to retrieve the performance at the end of its execution.

An example of such a Dockerfile is provided below.
Dockerfile:
FROM ubuntu:latest
# train machine learning model
# save performances
CMD echo ‘{“perf”:0.99}’ > /data/perf.json
